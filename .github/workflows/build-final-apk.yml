name: Build Fixed Chess Bot APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: 📥 Checkout Repository  
      uses: actions/checkout@v4
      
    - name: 📦 Extract and Fix server.zip
      run: |
        echo "🔍 Extracting server.zip..."
        unzip -o server.zip
        
        echo "🔧 Applying fixes to Android project..."
        cd fixed-chess-bot-app
        
        # Remove conflicting files
        rm -f build.gradle.kts settings.gradle.kts app/build.gradle.kts
        
        # Copy fixed configuration files
        cp -r ../fixed-app/* .
        
        # Fix source directory structure (move from src/src to src)
        if [ -d "app/src/src" ]; then
          echo "📁 Fixing source directory structure..."
          mv app/src/src/main app/src/main-new
          rm -rf app/src/main
          mv app/src/main-new app/src/main
        fi
        
        echo "✅ Project structure fixed"
        find . -name "*.gradle" -o -name "AndroidManifest.xml" | head -5
        
    - name: ☕ Set up JDK 11 (Compatible with AGP 7.4.2)
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 29
        build-tools: 29.0.3
        
    - name: 🔐 Accept Android Licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
      
    - name: 🔧 Setup Build Environment
      working-directory: fixed-chess-bot-app
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        chmod +x gradlew
        
        echo "📋 Gradle version:"
        ./gradlew --version
        
    - name: 🔨 Build APK
      working-directory: fixed-chess-bot-app
      run: |
        echo "🔨 Building Chess Bot APK..."
        ./gradlew clean assembleDebug --stacktrace --info
        
        echo "🔍 Locating APK files..."
        APK_FILES=$(find . -name "*.apk")
        if [ -z "$APK_FILES" ]; then
          echo "❌ No APK files found"
          find . -name "build" -type d -exec ls -la {} ;
          exit 1
        fi
        
        echo "✅ APK files generated:"
        for apk in $APK_FILES; do
          echo "📱 $apk ($(du -h $apk | cut -f1))"
        done
        
    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: chess-bot-redmi9-activ-fixed
        path: |
          fixed-chess-bot-app/**/*.apk
          fixed-chess-bot-app/app/build/outputs/apk/**/*
        retention-days: 30
        
    - name: 📋 Success Report
      run: |
        echo "# 🎉 Chess Bot APK Build SUCCESS!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **APK Generated Successfully for Redmi 9 Activ**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Issues Fixed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Conflicting Gradle versions resolved (AGP 7.4.2, Kotlin 1.8.10)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Package name corrected (com.chessbot)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Source directory structure fixed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ AndroidManifest.xml aligned with code" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MIUI permissions for Redmi 9 Activ added" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Install on Redmi 9 Activ:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download APK from artifacts above" >> $GITHUB_STEP_SUMMARY
        echo "2. Enable Unknown Sources in MIUI Security" >> $GITHUB_STEP_SUMMARY
        echo "3. Install APK and grant overlay + accessibility permissions" >> $GITHUB_STEP_SUMMARY
        echo "4. Disable battery optimization for the app" >> $GITHUB_STEP_SUMMARY
